quarkus.http.host=127.0.0.1
quarkus.http.port=2403
quarkus.swagger-ui.always-include=true
quarkus.banner.enabled=false

## Disable strict-origin-when-cross-origin in Quarkus

## https://quarkus.io/guides/security-cors
## https://quarkus.io/guides/http-reference#cors-filter
quarkus.http.cors=true
## Quarkus 2.14.2.Final and 2.13.5.Final released - Fix for CVE-2022-4116
## https://quarkus.io/blog/quarkus-2-14-2-final-released/
## https://www.contrastsecurity.com/security-influencers/localhost-attack-against-quarkus-developers-contrast-security
## https://access.redhat.com/security/cve/CVE-2022-4116
## Support all origins: https://quarkus.io/guides/security-cors#support-all-origins-in-dev-mode
quarkus.http.cors.origins=/.*/
quarkus.http.cors.headers=accept, origin, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET,PUT,POST,DELETE


## Quarkus Continuous Testing
## https://quarkus.io/guides/continuous-testing
quarkus.test.continuous-testing=enabled

## Dev Services for Databases - Quarkus
## https://quarkus.io/guides/databases-dev-services
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.reuse=true
# $ quarkus test

## Datasource configuration
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=milky
%dev.quarkus.datasource.password=milky
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://127.0.0.1:5434/milky_db
# drop and create the database at startup (use `update` to only update the schema)
#%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.database.generation=update
%prod.quarkus.hibernate-orm.database.generation=none
#%dev.quarkus.hibernate-orm.sql-load-script=import.sql
%prod.quarkus.hibernate-orm.sql-load-script=no-file
quarkus.hibernate-orm.log.sql=true
